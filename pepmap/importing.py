# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/Importing.ipynb (unless otherwise specified).

__all__ = ['import_spectronaut_data', 'import_maxquant_data', 'import_data']

# Cell
import pandas as pd
import re

def import_spectronaut_data(file, sample=None):
    """
    Function to import peptide level data from Spectronaut
    """
    file_type = file[file.rindex('.')+1:]
    if file_type == 'csv':
        data = pd.read_csv(file, sep=',')
    else:
        data = pd.read_csv(file, sep='\t')

    if sample:
        if isinstance(sample, list):
            data_sub = data[["PEP.AllOccurringProteinAccessions","EG.ModifiedSequence","R.FileName"]]
            data_sub = data_sub[data_sub["R.FileName"].isin(sample)]
            data_sub = data_sub[["PEP.AllOccurringProteinAccessions","EG.ModifiedSequence"]]
        elif isinstance(sample, str):
            data_sub = data[["PEP.AllOccurringProteinAccessions","EG.ModifiedSequence","R.FileName"]]
            data_sub = data_sub[data_sub["R.FileName"] == sample]
            data_sub = data_sub[["PEP.AllOccurringProteinAccessions","EG.ModifiedSequence"]]
    else:
        data_sub = data[["PEP.AllOccurringProteinAccessions","EG.ModifiedSequence"]]

    # get modified sequence
    mod_seq = data_sub.apply(lambda row: re.sub('_','',row["EG.ModifiedSequence"]), axis=1)
    data_sub = data_sub.assign(modified_sequence=mod_seq.values)
    # get naked sequence
    nak_seq = data_sub.apply(lambda row: re.sub(r'\[.*?\]','',row["modified_sequence"]), axis=1)
    data_sub = data_sub.assign(naked_sequence=nak_seq.values)
    data_sub = data_sub.rename(columns={"PEP.AllOccurringProteinAccessions": "all_protein_ids"})
    input_data = data_sub[["all_protein_ids","modified_sequence","naked_sequence"]]
    input_data = input_data.drop_duplicates().reset_index(drop=True)
    return input_data

# Cell
import pandas as pd
import re

def import_maxquant_data(file, sample=None):
    """
    Function to import peptide level data from MaxQuant
    """
    data = pd.read_csv(file, sep='\t')

    if sample:
        if isinstance(sample, list):
            data_sub = data[["Proteins","Modified sequence","Raw file"]]
            data_sub = data_sub[data_sub["Raw file"].isin(sample)]
            data_sub = data_sub[["Proteins","Modified sequence"]]
        elif isinstance(sample, str):
            data_sub = data[["Proteins","Modified sequence","Raw file"]]
            data_sub = data_sub[data_sub["Raw file"] == sample]
            data_sub = data_sub[["Proteins","Modified sequence"]]
    else:
        data_sub = data[["Proteins","Modified sequence"]]

    # get modified sequence
    mod_seq = data_sub.apply(lambda row: re.sub('_','',row["Modified sequence"]), axis=1)
    data_sub = data_sub.assign(modified_sequence=mod_seq.values)

    # replace outer () with []
    mod_seq_replaced = data_sub.apply(lambda row: re.sub(r'\((.*?\(.*?\))\)',r'[\1]',row["modified_sequence"]), axis=1)
    data_sub = data_sub.assign(modified_sequence=mod_seq_replaced.values)

    # get naked sequence
    nak_seq = data_sub.apply(lambda row: re.sub(r'\[.*?\]','',row["modified_sequence"]), axis=1)
    data_sub = data_sub.assign(naked_sequence=nak_seq.values)
    data_sub = data_sub.rename(columns={"Proteins": "all_protein_ids"})
    input_data = data_sub[["all_protein_ids","modified_sequence","naked_sequence"]]
    input_data = input_data.drop_duplicates().reset_index(drop=True)
    return input_data

# Cell
import pandas as pd
import re

def import_data(file, sample = None, verbose=True):
    file_type = file[file.rindex('.')+1:]
    if file_type == 'txt':
        cols = pd.read_csv(file, sep='\t', nrows=0).columns
        if set(["Proteins","Modified sequence","Raw file"]).issubset(set(cols)):
            if verbose:
                print("Import MaxQuant input")
            data = import_maxquant_data(file)
        else:
            raise TypeError(f'Input data format for {file} not known.')
    elif file_type in ['tsv','csv']:
        if file_type == 'csv':
            cols = pd.read_csv(file, sep=',', nrows=0).columns
        else:
            cols = pd.read_csv(file, sep='\t', nrows=0).columns
        if set(["PEP.AllOccurringProteinAccessions","EG.ModifiedSequence","R.FileName"]).issubset(set(cols)):
            if verbose:
                print("Import Spectronaut input")
            data = import_spectronaut_data(file, sample = sample)
        else:
            raise TypeError(f'Input data format for {file} not known.')
    else:
        raise TypeError(f'Input data format for {file} not known.')
    return data